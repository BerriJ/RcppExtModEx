// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/RcppFoo_types.h"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mapIn_and_mapOut
std::map<std::string, arma::colvec> mapIn_and_mapOut(const std::map<std::string, arma::colvec>& mymap);
RcppExport SEXP _RcppFoo_mapIn_and_mapOut(SEXP mymapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::map<std::string, arma::colvec>& >::type mymap(mymapSEXP);
    rcpp_result_gen = Rcpp::wrap(mapIn_and_mapOut(mymap));
    return rcpp_result_gen;
END_RCPP
}
// makeFoo
Foo makeFoo();
RcppExport SEXP _RcppFoo_makeFoo() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(makeFoo());
    return rcpp_result_gen;
END_RCPP
}
// getMap
std::map<std::string, arma::colvec> getMap(Foo& instance);
RcppExport SEXP _RcppFoo_getMap(SEXP instanceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Foo& >::type instance(instanceSEXP);
    rcpp_result_gen = Rcpp::wrap(getMap(instance));
    return rcpp_result_gen;
END_RCPP
}
// setMap
void setMap(Foo& instance, const std::map<std::string, arma::colvec>& mymap);
RcppExport SEXP _RcppFoo_setMap(SEXP instanceSEXP, SEXP mymapSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Foo& >::type instance(instanceSEXP);
    Rcpp::traits::input_parameter< const std::map<std::string, arma::colvec>& >::type mymap(mymapSEXP);
    setMap(instance, mymap);
    return R_NilValue;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_FooEx();

static const R_CallMethodDef CallEntries[] = {
    {"_RcppFoo_mapIn_and_mapOut", (DL_FUNC) &_RcppFoo_mapIn_and_mapOut, 1},
    {"_RcppFoo_makeFoo", (DL_FUNC) &_RcppFoo_makeFoo, 0},
    {"_RcppFoo_getMap", (DL_FUNC) &_RcppFoo_getMap, 1},
    {"_RcppFoo_setMap", (DL_FUNC) &_RcppFoo_setMap, 2},
    {"_rcpp_module_boot_FooEx", (DL_FUNC) &_rcpp_module_boot_FooEx, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppFoo(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
